)
se
View(data_expr)
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50)
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2) # Ajusta segons les teves dades
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50)
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2)
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
# Carregar els paquets necessaris
library(ggplot2)
library(tidyr)
library(pheatmap)
library(ggfortify)
# Nombre de mostres i característiques
dim(se)
# Resum de les metadades de les mostres
summary(colData(se))
# Resum de les dades d'expressió
assay_data <- assay(se)
summary(assay_data)
# Distribució de les intensitats abans de la transformació
intensities <- as.vector(assay_data)
ggplot(data.frame(intensity = intensities), aes(x = intensity)) +
geom_histogram(binwidth = 0.05, fill = "skyblue", color = "black") +
labs(title = "Distribució de les intensitats metabolòmiques",
x = "Intensitat",
y = "Freqüència")
# Transformació logarítmica de les dades
log_assay_data <- log2(assay_data + 1) # Afegim 1 per evitar log(0)
# Actualitzar l'objecte SummarizedExperiment amb les dades transformades
assays(se)$logcounts <- log_assay_data
# PCA utilitzant les dades log-transformades
pca_res <- prcomp(t(log_assay_data), scale. = TRUE)
# Afegir informació de les metadades
pca_data <- data.frame(pca_res$x, colData(se))
# Visualitzar els dos primers components principals
ggplot(pca_data, aes(x = PC1, y = PC2, color = type)) +
geom_point(size = 3) +
labs(title = "Anàlisi de components principals (PCA)",
x = "PC1",
y = "PC2") +
theme_minimal()
# PCA utilitzant les dades log-transformades
pca_res <- prcomp(t(log_assay_data), scale. = TRUE)
# Afegir informació de les metadades
pca_data <- data.frame(pca_res$x, colData(se))
# Visualitzar els dos primers components principals
ggplot(pca_data, aes(x = PC1, y = PC2, color = Exposure)) +
geom_point(size = 3) +
labs(title = "Anàlisi de components principals (PCA)",
x = "PC1",
y = "PC2") +
theme_minimal()
# Càlcul de la matriu de correlació
cor_matrix <- cor(log_assay_data)
# Mapa de calor
pheatmap(cor_matrix,
clustering_distance_rows = "correlation",
clustering_distance_cols = "correlation",
show_rownames = FALSE,
show_colnames = FALSE,
main = "Mapa de calor de correlacions entre mostres")
# Suposem que tens una variable 'type' a les metadades
# Assegura't que la variable és numèrica o categòrica segons correspongui
# Exemple de visualització de PC1 vs nivell d'exposició
ggplot(pca_data, aes(x = PC1, y = PC2, color = Exposure)) +
geom_point(size = 3) +
labs(title = "PCA amb nivell d'exposició",
x = "PC1",
y = "PC2") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50)
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2)
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
# Carregar els paquets necessaris
library(ggplot2)
library(tidyr)
library(pheatmap)
library(ggfortify)
# Nombre de mostres i característiques
dim(se)
# Resum de les metadades de les mostres
summary(colData(se))
# Resum de les dades d'expressió
assay_data <- assay(se)
summary(assay_data)
# Distribució de les intensitats abans de la transformació
intensities <- as.vector(assay_data)
ggplot(data.frame(intensity = intensities), aes(x = intensity)) +
geom_histogram(binwidth = 0.05, fill = "skyblue", color = "black") +
labs(title = "Distribució de les intensitats metabolòmiques",
x = "Intensitat",
y = "Freqüència")
# PCA utilitzant les dades log-transformades
pca_res <- prcomp(t(log_assay_data), scale. = TRUE)
# Comprovar els nivells de l'Exposició
table(colData(se)$Exposure)
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50)
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2)
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
# Carregar els paquets necessaris
library(ggplot2)
library(tidyr)
library(pheatmap)
library(ggfortify)
# Nombre de mostres i característiques
dim(se)
# Resum de les metadades de les mostres
summary(colData(se))
# Resum de les dades d'expressió
assay_data <- assay(se)
summary(assay_data)
# Comprovar els nivells de l'Exposició
table(colData(se)$Exposure)
library(dplyr)
library(tidyr)
# Convertim les dades a format llarg
assay_data_long <- assay(se) %>%
as.data.frame() %>%
rownames_to_column(var = "Metabolite") %>%
pivot_longer(-Metabolite, names_to = "Subject ID", values_to = "Expression") %>%
left_join(as.data.frame(colData(se)), by = "Subject ID")
library(dplyr)
library(tidyr)
library(tibble)  # Afegir aquesta línia per carregar el paquet tibble
# Convertim les dades a format llarg
assay_data_long <- assay(se) %>%
as.data.frame() %>%
rownames_to_column(var = "Metabolite") %>%
pivot_longer(-Metabolite, names_to = "Subject ID", values_to = "Expression") %>%
left_join(as.data.frame(colData(se)), by = "Subject ID")
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50)
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2)
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Replace spaces with underscores in column names
colnames(phenotypic_data) <- gsub(" ", "_", colnames(phenotypic_data))
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject_ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
View(data_expr)
View(expression_data)
View(phenotypic_data)
# Carregar els paquets necessaris
library(ggplot2)
library(tidyr)
library(pheatmap)
library(ggfortify)
# Nombre de mostres i característiques
dim(se)
# Resum de les metadades de les mostres
summary(colData(se))
# Resum de les dades d'expressió
assay_data <- assay(se)
summary(assay_data)
library(dplyr)
library(tidyr)
library(tibble)  # Afegir aquesta línia per carregar el paquet tibble
# Convertim les dades a format llarg
assay_data_long <- assay(se) %>%
as.data.frame() %>%
rownames_to_column(var = "Metabolite") %>%
pivot_longer(-Metabolite, names_to = "Subject ID", values_to = "Expression") %>%
left_join(as.data.frame(colData(se)), by = "Subject_ID")
library(dplyr)
library(tidyr)
library(tibble)  # Afegir aquesta línia per carregar el paquet tibble
# Convertir colData(se) a data frame sense modificar els noms de les columnes
colData_df <- as.data.frame(colData(se), check.names = FALSE)
# Comprovar els noms de les columnes
colnames(colData_df)
# Convertim les dades a format llarg
assay_data_long <- assay(se) %>%
as.data.frame(check.names = FALSE) %>%
rownames_to_column(var = "Metabolite") %>%
pivot_longer(-Metabolite, names_to = "Subject ID", values_to = "Expression") %>%
left_join(colData_df, by = "Subject ID")
library(dplyr)
library(tidyr)
library(tibble)  # Afegir aquesta línia per carregar el paquet tibble
# Convertir colData(se) a data frame sense modificar els noms de les columnes
colData_df <- as.data.frame(colData(se), check.names = FALSE)
# Comprovar els noms de les columnes
colnames(colData_df)
# Convertim les dades a format llarg
assay_data_long <- assay(se) %>%
as.data.frame(check.names = FALSE) %>%
rownames_to_column(var = "Metabolite") %>%
pivot_longer(-Metabolite, names_to = "Subject ID", values_to = "Expression") %>%
left_join(colData_df, by = "Subject_ID")
knitr::opts_chunk$set(echo = TRUE)
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50)
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2)
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Replace spaces with underscores in column names
colnames(phenotypic_data) <- gsub(" ", "_", colnames(phenotypic_data))
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject_ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
# Carregar els paquets necessaris
library(ggplot2)
library(tidyr)
library(pheatmap)
library(ggfortify)
# Nombre de mostres i característiques
dim(se)
# Resum de les metadades de les mostres
summary(colData(se))
# Resum de les dades d'expressió
assay_data <- assay(se)
summary(assay_data)
library(dplyr)
library(tidyr)
library(tibble)  # Afegir aquesta línia per carregar el paquet tibble
# Convertir colData(se) a data frame sense modificar els noms de les columnes
colData_df <- as.data.frame(colData(se), check.names = FALSE)
# Comprovar els noms de les columnes
colnames(colData_df)
# Convertim les dades a format llarg
assay_data_long <- assay(se) %>%
as.data.frame(check.names = FALSE) %>%
rownames_to_column(var = "Metabolite") %>%
pivot_longer(-Metabolite, names_to = "Subject ID", values_to = "Expression") %>%
left_join(colData_df, by = "Subject_ID")
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50) %>%
mutate(Exposure = as.factor(Exposure))
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2)
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Replace spaces with underscores in column names
colnames(phenotypic_data) <- gsub(" ", "_", colnames(phenotypic_data))
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject_ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
View(phenotypic_data)
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50) %>%
mutate(Exposure = as.factor(Exposure)) %>%
mutate(Subject_ID = as.factor(Subject_ID))
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50) %>%
mutate(Exposure = as.factor(Exposure)) %>%
mutate(Subject_ID = as.factor(Subject ID))
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50) %>%
mutate(Exposure = as.factor(Exposure)) %>%
mutate(Subject_ID = as.factor(`Subject ID`))
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2)
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Replace spaces with underscores in column names
colnames(phenotypic_data) <- gsub(" ", "_", colnames(phenotypic_data))
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject_ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50) %>%
mutate(Exposure = as.factor(Exposure)) %>%
rename(Subject_ID = `Subject ID`) %>%
mutate(Subject_ID = as.factor(Subject_ID))
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2)
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject_ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50) %>%
mutate(Exposure = as.factor(Exposure)) %>%
rename(Subject_ID = `Subject ID`) %>%
mutate(Subject_ID = as.factor(Subject_ID))
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2)
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject_ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
View(expression_data)
View(expression_data)
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50) %>%
mutate(Exposure = as.factor(Exposure)) %>%
rename(Subject_ID = `Subject ID`) %>%
mutate(Subject_ID = as.factor(Subject_ID))
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2)
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject_ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
table(phenotypic_data$Exposure)
# Comprovem el nombre de mostres en cada grup d'exposició.
table(phenotypic_data$Exposure)
library(ggplot2)
library(reshape2)
# Convertim l'assay a data frame
expr_df <- as.data.frame(assay(se))
expr_df$Metabolite <- rownames(expr_df)
# Transformem les dades a format llarg
expr_melt <- melt(expr_df, id.vars = "Metabolite", variable.name = "Subject_ID", value.name = "Intensity")
# Afegim la informació d'exposició
expr_melt <- merge(expr_melt, phenotypic_data, by = "Subject_ID")
# Plotegem
ggplot(expr_melt, aes(x = Subject_ID, y = Intensity, fill = Exposure)) +
geom_boxplot(outlier.shape = NA) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
labs(title = "Distribució de les intensitats per mostra", x = "Mostres", y = "Intensitat")
library(FactoMineR)
install.packages("FactoMineR")
library(FactoMineR)
knitr::opts_chunk$set(echo = TRUE)
# Carregar els paquets necessaris
library(readxl)
library(SummarizedExperiment)
library(dplyr)
# Llegir dades metabolòmiques
data_expr <- read_excel("ST000051/4a. Fetal Metabolomics of iAs exposure Phenotypic and Normalized Binned Data.xlsx") %>%
slice(1:50) %>%
mutate(Exposure = as.factor(Exposure)) %>%
rename(Subject_ID = `Subject ID`) %>%
mutate(Subject_ID = as.factor(Subject_ID))
# Suposant que les primeres columnes són dades fenotípiques i les restants són dades d'expressió
phenotypic_data <- data_expr %>% select(1:2)
expression_data <- data_expr %>% select(3:ncol(data_expr)) %>% as.matrix()
expression_data <- t(expression_data)
# Assigna els Subject IDs com a noms de les columnes de expression_data
colnames(expression_data) <- phenotypic_data$`Subject_ID`
se <- SummarizedExperiment(
assays = list(counts = expression_data),
colData = phenotypic_data
)
se
# Comprovem el nombre de mostres en cada grup d'exposició.
table(phenotypic_data$Exposure)
library(ggplot2)
library(reshape2)
# Convertim l'assay a data frame
expr_df <- as.data.frame(assay(se))
expr_df$Metabolite <- rownames(expr_df)
# Transformem les dades a format llarg
expr_melt <- melt(expr_df, id.vars = "Metabolite", variable.name = "Subject_ID", value.name = "Intensity")
# Afegim la informació d'exposició
expr_melt <- merge(expr_melt, phenotypic_data, by = "Subject_ID")
# Plotegem
ggplot(expr_melt, aes(x = Subject_ID, y = Intensity, fill = Exposure)) +
geom_boxplot(outlier.shape = NA) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
labs(title = "Distribució de les intensitats per mostra", x = "Mostres", y = "Intensitat")
library(FactoMineR)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE)
library(FactoMineR)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE)
library(FactoMineR)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
